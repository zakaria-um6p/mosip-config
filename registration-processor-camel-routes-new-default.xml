<routes xmlns="http://camel.apache.org/schema/spring">
    <!-- packet-receiver to securezone notifiation -->
    <route id="packet-receiver->packet-uploader new route">
        <from uri="eventbus:packet-receiver-new-bus-out" />
        <log
                message="packet-receiver-->packet-uploader new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:packet-uploader-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>

    <!-- packet-uploader to packet-validator Route -->
    <route id="packet-uploader-->packet-validator new route">
    <from uri="eventbus:packet-uploader-new-bus-out" />
    <log
            message="packet-uploader-->packet-validator new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:packet-validator-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <!-- Packet Validator to Packet classifier Route -->
    <route id="packet-validator-->packet-classifier new route">
        <from uri="eventbus:packet-validator-new-bus-out" />
        <log
            message="packet-validator-->packet-classifier new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:packet-classifier-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <!-- Packet Classifier to Quality Checker Route -->
    <route id="packet-classifier-->quality-checker new route">
        <from uri="eventbus:packet-classifier-new-bus-out" />
        <log
            message="packet-classifier-->quality-checker new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:quality-checker-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="quality-checker-->osi-validator new route">
        <from uri="eventbus:quality-checker-new-bus-out" />
        <log
            message="quality-checker-->osi-validator new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:o-s-i-validator-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="osi-validator-->external-stage new route">
        <from uri="eventbus:o-s-i-validator-new-bus-out" />
        <log
            message="osi-validator-->external-stage new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:external-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="external-stage-->demo-dedupe new route">
        <from uri="eventbus:external-new-bus-out" />
        <log
                message="external-stage-->demo-dedupe new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:demo-dedupe-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="demo-dedupe-->bio-dedupe new route">
        <from uri="eventbus:demo-dedupe-new-bus-out" />
        <log
            message="demo-dedupe-->bio-dedupe new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:bio-dedupe-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"address":"abis-handler-bus-in"'</simple>
                <to uri="eventbus:abis-handler-bus-in" />
            </when>
			<when>
                <simple>${bodyAs(String)} contains '"address":"manual-verification-bus-in"'</simple>
                <to uri="vertx:manual-verification-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in"/>
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="abis-handler-->abis-middleware new route">
        <from uri="eventbus:abis-handler-new-bus-out" />
        <log
            message="abis-handler-->abis-middleware new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"address":"abis-middle-ware-bus-in"'</simple>
                <to uri="eventbus:abis-middle-ware-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"address":"demo-dedupe-bus-in"'</simple>
                <to uri="eventbus:demo-dedupe-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"address":"bio-dedupe-bus-in"'</simple>
                <to uri="eventbus:bio-dedupe-bus-in"/>
            </when>
        </choice>
    </route>
    <route id="bio-dedupe-->uin-generation new route">
        <from uri="eventbus:bio-dedupe-new-bus-out" />
        <log
            message="bio-dedupe-->uin-generation new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:uin-generator-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"address":"abis-handler-bus-in"'</simple>
                <to uri="eventbus:abis-handler-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"address":"manual-verification-bus-in"'</simple>
                <to uri="vertx:manual-verification-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="manual-verification-->uin-generation new route">
        <from uri="eventbus:manual-verification-new-bus-out" />
        <log
            message="manual-verification-->uin-generation new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:uin-generator-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":false' and ${bodyAs(String)} contains '"internalError":false'</simple>
                <to uri="eventbus:message-sender-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <!-- UIN Generator to Printing and Message Sender Route -->
    <route id="uin-generation route-->printing-stage-->message-sender new route">
        <from uri="eventbus:uin-generator-new-bus-out" />
        <log
            message="uin-generation-->printing-stage and message-sender-stage route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:message-sender-bus-in" />
                <to uri="eventbus:training-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
	 <route id="training-stage-->printing stage new route">
        <from uri="eventbus:training-new-bus-out" />
        <log message="training-stage-->printing stage new route ${bodyAs(String)}" />
        <choice>
            <when>
                <simple>${bodyAs(String)} contains '"isValid":true'</simple>
                <to uri="eventbus:printing-bus-in" />
            </when>
            <when>
                <simple>${bodyAs(String)} contains '"internalError":true'</simple>
                <to uri="eventbus:retry-bus-in" />
            </when>
            <otherwise>
                <to uri="eventbus:error-bus-in" />
            </otherwise>
        </choice>
    </route>
    <route id="abis-middleware route-->abis-handler new route">
        <from uri="eventbus:abis-middle-ware-new-bus-out" />
        <log
            message="abis-middleware route-->abis-handler new route ${bodyAs(String)}" />
           <to uri="eventbus:abis-handler-bus-in" />
    </route>
</routes>

